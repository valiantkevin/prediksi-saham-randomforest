# Generated by Django 2.2.5 on 2019-11-05 07:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('prediksi', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupedStocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(default='STOCK', max_length=5)),
                ('date', models.DateField()),
                ('obv_comparison', models.IntegerField()),
                ('obv_position', models.IntegerField()),
                ('co_comparison', models.IntegerField()),
                ('co_position', models.IntegerField()),
                ('macd_comparison', models.IntegerField()),
                ('macd_position', models.IntegerField()),
                ('signal_comparison', models.IntegerField()),
                ('signal_position', models.IntegerField()),
                ('histogram_comparison', models.IntegerField()),
                ('histogram_position', models.IntegerField()),
                ('bb_condition', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OneHotStocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(default='STOCK', max_length=5)),
                ('date', models.DateField()),
                ('obv_comparison_naik', models.IntegerField()),
                ('obv_comparison_tetap', models.IntegerField()),
                ('obv_comparison_turun', models.IntegerField()),
                ('obv_position_positif', models.IntegerField()),
                ('obv_position_negatif', models.IntegerField()),
                ('obv_position_nol', models.IntegerField()),
                ('co_position_positif', models.IntegerField()),
                ('co_position_negatif', models.IntegerField()),
                ('co_position_nol', models.IntegerField()),
                ('co_comparison_naik', models.IntegerField()),
                ('co_comparison_turun', models.IntegerField()),
                ('co_comparison_tetap', models.IntegerField()),
                ('macd_position_positif', models.IntegerField()),
                ('macd_position_negatif', models.IntegerField()),
                ('macd_position_nol', models.IntegerField()),
                ('macd_comparison_naik', models.IntegerField()),
                ('macd_comparison_turun', models.IntegerField()),
                ('macd_comparison_tetap', models.IntegerField()),
                ('signal_position_positif', models.IntegerField()),
                ('signal_position_negatif', models.IntegerField()),
                ('signal_position_nol', models.IntegerField()),
                ('signal_comparison_naik', models.IntegerField()),
                ('signal_comparison_turun', models.IntegerField()),
                ('signal_comparison_tetap', models.IntegerField()),
                ('histogram_position_positif', models.IntegerField()),
                ('histogram_position_negatif', models.IntegerField()),
                ('histogram_position_nol', models.IntegerField()),
                ('histogram_comparison_naik', models.IntegerField()),
                ('histogram_comparison_turun', models.IntegerField()),
                ('histogram_comparison_tetap', models.IntegerField()),
                ('bb_condition_overbought', models.IntegerField()),
                ('bb_condition_oversold', models.IntegerField()),
                ('bb_condition_normal', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PlainStocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(default='STOCK', max_length=5)),
                ('date', models.DateField()),
                ('open', models.IntegerField()),
                ('high', models.IntegerField()),
                ('low', models.IntegerField()),
                ('close', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('obv', models.FloatField()),
                ('co', models.FloatField()),
                ('macd', models.FloatField()),
                ('signal', models.FloatField()),
                ('histogram', models.FloatField()),
                ('bollinger_high', models.FloatField()),
                ('bollinger_low', models.FloatField()),
            ],
        ),
        migrations.AddField(
            model_name='stocks',
            name='after1',
            field=models.IntegerField(default=9),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='stocks',
            name='after20',
            field=models.IntegerField(default=9),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='stocks',
            name='after5',
            field=models.IntegerField(default=9),
            preserve_default=False,
        ),
    ]
